version: "3.5"

services:
  postgres:
    image: 'postgres:16-alpine'
    restart: always
    volumes:
      - './pgdata:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=linkwarden
      - POSTGRES_USER=linkwarden
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
    labels:
      - coolify.managed=true
      - coolify.applicationId=linkwarden-postgres
      - coolify.type=application
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U linkwarden'
      interval: 10s
      timeout: 5s
      retries: 5
  linkwarden:
    build: .
    #image: 'ghcr.io/linkwarden/linkwarden:latest'
    restart: always
    volumes:
      - './data:/data/data'
    ports:
      - '3000:3000'
    environment:
      - SERVICE_FQDN_LINKWARDEN
      - 'DATABASE_URL=postgresql://linkwarden:${POSTGRES_PASSWORD}@postgres:5432/linkwarden'
      - 'NEXTAUTH_URL=${SERVICE_FQDN_LINKWARDEN}/api/v1/auth'
      - 'NEXTAUTH_SECRET=${NEXTAUTH_SECRET}'
      - 'NEXT_PUBLIC_DISABLE_REGISTRATION=${PUBLIC_DISABLE_REGISTRATION}'
      - 'DISABLE_NEW_SSO_USERS=${DISABLE_NEW_SSO_USERS}'
    depends_on:
      - postgres
    labels:
      - coolify.managed=true
      - coolify.applicationId=linkwarden
      - coolify.type=application
      - traefik.enable=true
      - 'traefik.http.routers.linkwarden.rule=Host(`{SERVICE_FQDN_LINKWARDEN}`) && PathPrefix(`/`)'
      - traefik.http.routers.linkwarden.entryPoints=https
      - traefik.http.routers.linkwarden.tls=true
